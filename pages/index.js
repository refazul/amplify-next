import { Auth, withSSRContext, DataStore } from 'aws-amplify'
import { serializeModel } from '@aws-amplify/datastore/ssr'
import Head from 'next/head'
import Link from 'next/link'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import { Blog, Post } from '../src/models'

export async function getServerSideProps({ req }) {
	const SSR = withSSRContext({ req });
	let blogData;
	try {
		blogData = await SSR.DataStore.query(Blog);
	} catch (error) {
		console.error(error);
	}
	return {
		props: {
			blogs: serializeModel(blogData)
		}
	}
}

export default function Home({ blogs }) {
	const [user, setUser] = useState();
	const [isAdmin, setIsAdmin] = useState(false);
	useEffect(() => {
		const getUser = async () => {
			try {
				const user = await Auth.currentAuthenticatedUser();
				setUser(user);
				setIsAdmin(user.signInUserSession.accessToken.payload['cognito:groups'].includes('admin'))
			} catch (error) {
				console.error(error);
			}
		}
		getUser();
	}, []);

	const createPost = async () => {
		const title = window.prompt('title');
		const content = window.prompt('content');

		const newPost = await DataStore.save(new Post({
			title, content, blogID: blogs[0].id
		}))
	}
	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			{
				user ? <button onClick={
					async () => {
						await Auth.signOut();
						setUser(null);
					}
				}>Sign Out</button> : <Link href='/sign-in'>Sign In</Link>
			}
			{
				blogs.map(blog => {
					return <h1 key={blog.id}>{blog.name}</h1>
				})
			}
			{isAdmin && <h1>Admin</h1>}
			<button onClick={createPost}>Create Post</button>
		</div>
	)
}
